exp_dat_clump <- exp_dat %>%
rename(rsid = SNP,
pval = pval.exposure) %>%
nnMR::nn_ld_clump(dat = .,
clump_kb = clump_kb,
clump_r2 = clump_r2,
clump_p = 1,
plink_bin =plinkbinr::get_plink_exe(),
bfile = bfile_path)%>%
rename(SNP = rsid,
pval.exposure = pval)
},error=function(error){
skip <<- TRUE
})
if (skip){
cat('clump后SNP不足，已跳过\n')
z <- z+1
next
}
# 计算R2，筛选F值
exp_dat_clump <- nnMR::filter_F(exp_dat_clump)
View(exp_dat_clump)
# 读取结局并提取相关数据
out_dat <- subset(outcome_data,SNP %in% exp_dat_clump[['SNP']])
# harmonise
dat_harmonised <- TwoSampleMR::harmonise_data(exposure_dat = exp_dat_clump,
outcome_dat = out_dat)
# 如果harmonise后SNP少于3个，则跳过
if (nrow(dat_harmonised)<3){
cat('harmonise后SNP不足，已跳过\n')
z <- z+1
next
}
# MR分析
res <- TwoSampleMR::mr(dat_harmonised,method_list = c('mr_egger_regression','mr_weighted_median','mr_ivw'))
reg <- TwoSampleMR::generate_odds_ratios(res)
cat('...P-value:',reg$pval[3])
# cat('***','进行后续分析...')
# 创建文件夹，写入harmonise文件
if (!dir.exists('harmonise')){
dir.create('harmonise')
}
data.table::fwrite(dat_harmonised,paste0('harmonise/',file_id,'_harmonised.csv'))
#   }else{
#     presso_dat <<- data.frame(list('exposure'=file_id,'PRESSO_outlier_corrected_p'=outlier_corrected_p,
#                                    'PRESSO_global_p'=global_p,'PRESSO_outliers'=outliers))
#   }
# },error=function(error){
#   presso_dat <<- data.frame(list('exposure'=file_id,'PRESSO_outlier_corrected_p'=NA,
#                                  'PRESSO_global_p'=NA,'PRESSO_outliers'=NA))
# })
# 整合数据
# data <- merge(reg,presso_dat,by ='exposure')[c(1:3),]
data <- reg
View(data)
ple <- TwoSampleMR::mr_pleiotropy_test(dat_harmonised)[,-c(1:3,6)]
View(ple)
data$file_id <- file_id
colnames(ple)[3] <- 'pleiotropy_pval'
ht <- TwoSampleMR::mr_heterogeneity(dat_harmonised)[2,-c(1:3,5)]
View(ht)
ii <- (ht$Q-ht$Q_df)/ht$Q
if (ii<0){
ht$I2 <- 0
}else{
ht$I2 <- (ht$Q-ht$Q_df)/ht$Q
}
mgx <- merge(ple,ht,by='exposure')
View(mgx)
new <- merge(data,mgx,by='exposure')
View(new)
View(new)
data <- new[,-c(2,3)]
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
creating_mr_plots(dat_harmonised=dat_harmonised,res=res,file_id=file_id)
nnMR::creating_mr_plots(dat_harmonised=dat_harmonised,res=res,file_id=file_id)
nnMR::creating_mr_plots(dat_harmonised=dat_harmonised,res=res)
z <- z+1
cat('ok\n')
skip_data <- data.frame(list('exposure'=exposure_name))
View(skip_data)
skip_data <- data.frame(list('exposure'=exposure_name,'outcome'=outcome_name,'method'=NA,'nsnp'=0,'b'=NA,
'se'=NA),'pval'=NA,'lo_ci'=NA,'up_ci'=NA,'or'=NA,'or_lci95'=NA,
'or_uci95'=NA,'file_id'=file_id,'egger_intercept'=NA,'pleiotropy_pval'=NA,
'Q'=NA,'Q_df'=NA,'Q_pval'=NA),'I2'=NA))
skip_data <- data.frame(list('exposure'=exposure_name,'outcome'=outcome_name,'method'=NA,'nsnp'=0,'b'=NA,
'se'=NA,'pval'=NA,'lo_ci'=NA,'up_ci'=NA,'or'=NA,'or_lci95'=NA,
'or_uci95'=NA,'file_id'=file_id,'egger_intercept'=NA,'pleiotropy_pval'=NA,
'Q'=NA,'Q_df'=NA,'Q_pval'=NA,'I2'=NA))
View(skip_data)
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
library(data.table)
library(devtools)
library(usethis)
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd('C:/Users/Zz/Desktop/nntest')
save(outcome_data,'outcome_test.RData')
save(outcome_data,'outcome_test.RData')
save('outcome_test.RData',outcome_data)
save(outcome_data,'outcome_test.RData')
data.table::fwrite(outcome_data,'outcome_test.txt.gz')
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd('C:/Users/Zz/Desktop/nntest')
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd('C:/Users/Zz/Desktop/nntest')
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
View(reg)
# MR分析
res <- TwoSampleMR::mr(dat_harmonised,method_list = c('mr_egger_regression','mr_weighted_median','mr_ivw'))
View(res)
# file_id <- file_list[1]
file_id <- 'GCST90001500'
exposure_name <- dict_immune[[file_id]]
cat('(',z,'/',zz,') Analysing',' \'',exposure_name,'\'',' to \'',outcome_name,'\'',sep = '')
# 判断是否已经做过
if (file_id %in% save_id){
z <- z+1
cat('...已跳过\n')
next
}
# 读取暴露并筛选
tryCatch({
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
},error=function(error){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
})
exp_dat <- subset(exp_dat,pval.exposure<exposure_pval)
# clump,如果报错则跳过
tryCatch({
exp_dat_clump <- exp_dat %>%
rename(rsid = SNP,
pval = pval.exposure) %>%
nnMR::nn_ld_clump(dat = .,
clump_kb = clump_kb,
clump_r2 = clump_r2,
clump_p = 1,
plink_bin =plinkbinr::get_plink_exe(),
bfile = bfile_path)%>%
rename(SNP = rsid,
pval.exposure = pval)
},error=function(error){
skip <<- TRUE
})
if (skip){
skip_data <- data.frame(list('exposure'=exposure_name,'outcome'=outcome_name,'method'=NA,'nsnp'=0,'b'=NA,
'se'=NA,'pval'=NA,'lo_ci'=NA,'up_ci'=NA,'or'=NA,'or_lci95'=NA,
'or_uci95'=NA,'file_id'=file_id,'egger_intercept'=NA,'pleiotropy_pval'=NA,
'Q'=NA,'Q_df'=NA,'Q_pval'=NA,'I2'=NA))
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
cat('clump后SNP不足，已跳过\n')
z <- z+1
next
}
# 计算R2，筛选F值
exp_dat_clump <- nnMR::filter_F(exp_dat_clump)
# 读取结局并提取相关数据
out_dat <- subset(outcome_data,SNP %in% exp_dat_clump[['SNP']])
# harmonise
dat_harmonised <- TwoSampleMR::harmonise_data(exposure_dat = exp_dat_clump,
outcome_dat = out_dat)
# 如果harmonise后SNP少于3个，则跳过
if (nrow(dat_harmonised)<3){
cat('harmonise后SNP不足，已跳过\n')
skip_data <- data.frame(list('exposure'=exposure_name,'outcome'=outcome_name,'method'=NA,'nsnp'=nrow(dat_harmonised),'b'=NA,
'se'=NA,'pval'=NA,'lo_ci'=NA,'up_ci'=NA,'or'=NA,'or_lci95'=NA,
'or_uci95'=NA,'file_id'=file_id,'egger_intercept'=NA,'pleiotropy_pval'=NA,
'Q'=NA,'Q_df'=NA,'Q_pval'=NA,'I2'=NA))
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
z <- z+1
next
}
# MR分析
res <- TwoSampleMR::mr(dat_harmonised,method_list = c('mr_egger_regression','mr_weighted_median','mr_ivw'))
View(res)
file_id <- file_list[3]
# file_id <- 'GCST90001500'
exposure_name <- dict_immune[[file_id]]
cat('(',z,'/',zz,') Analysing',' \'',exposure_name,'\'',' to \'',outcome_name,'\'',sep = '')
# 判断是否已经做过
if (file_id %in% save_id){
z <- z+1
cat('...已跳过\n')
next
}
# 读取暴露并筛选
tryCatch({
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
},error=function(error){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
})
exp_dat <- subset(exp_dat,pval.exposure<exposure_pval)
# clump,如果报错则跳过
tryCatch({
exp_dat_clump <- exp_dat %>%
rename(rsid = SNP,
pval = pval.exposure) %>%
nnMR::nn_ld_clump(dat = .,
clump_kb = clump_kb,
clump_r2 = clump_r2,
clump_p = 1,
plink_bin =plinkbinr::get_plink_exe(),
bfile = bfile_path)%>%
rename(SNP = rsid,
pval.exposure = pval)
},error=function(error){
skip <<- TRUE
})
if (skip){
skip_data <- data.frame(list('exposure'=exposure_name,'outcome'=outcome_name,'method'=NA,'nsnp'=0,'b'=NA,
'se'=NA,'pval'=NA,'lo_ci'=NA,'up_ci'=NA,'or'=NA,'or_lci95'=NA,
'or_uci95'=NA,'file_id'=file_id,'egger_intercept'=NA,'pleiotropy_pval'=NA,
'Q'=NA,'Q_df'=NA,'Q_pval'=NA,'I2'=NA))
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
cat('clump后SNP不足，已跳过\n')
z <- z+1
next
}
# 计算R2，筛选F值
exp_dat_clump <- nnMR::filter_F(exp_dat_clump)
# 读取结局并提取相关数据
out_dat <- subset(outcome_data,SNP %in% exp_dat_clump[['SNP']])
# harmonise
dat_harmonised <- TwoSampleMR::harmonise_data(exposure_dat = exp_dat_clump,
outcome_dat = out_dat)
# 如果harmonise后SNP少于3个，则跳过
if (nrow(dat_harmonised)<3){
cat('harmonise后SNP不足，已跳过\n')
skip_data <- data.frame(list('exposure'=exposure_name,'outcome'=outcome_name,'method'=NA,'nsnp'=nrow(dat_harmonised),'b'=NA,
'se'=NA,'pval'=NA,'lo_ci'=NA,'up_ci'=NA,'or'=NA,'or_lci95'=NA,
'or_uci95'=NA,'file_id'=file_id,'egger_intercept'=NA,'pleiotropy_pval'=NA,
'Q'=NA,'Q_df'=NA,'Q_pval'=NA,'I2'=NA))
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
z <- z+1
next
}
# MR分析
res <- TwoSampleMR::mr(dat_harmonised,method_list = c('mr_egger_regression','mr_weighted_median','mr_ivw'))
reg <- TwoSampleMR::generate_odds_ratios(res)
View(res)
file_id <- file_list[9]
# file_id <- 'GCST90001500'
exposure_name <- dict_immune[[file_id]]
cat('(',z,'/',zz,') Analysing',' \'',exposure_name,'\'',' to \'',outcome_name,'\'',sep = '')
# 判断是否已经做过
if (file_id %in% save_id){
z <- z+1
cat('...已跳过\n')
next
}
# 读取暴露并筛选
tryCatch({
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
},error=function(error){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
})
exp_dat <- subset(exp_dat,pval.exposure<exposure_pval)
# clump,如果报错则跳过
tryCatch({
exp_dat_clump <- exp_dat %>%
rename(rsid = SNP,
pval = pval.exposure) %>%
nnMR::nn_ld_clump(dat = .,
clump_kb = clump_kb,
clump_r2 = clump_r2,
clump_p = 1,
plink_bin =plinkbinr::get_plink_exe(),
bfile = bfile_path)%>%
rename(SNP = rsid,
pval.exposure = pval)
},error=function(error){
skip <<- TRUE
})
if (skip){
skip_data <- data.frame(list('exposure'=exposure_name,'outcome'=outcome_name,'method'=NA,'nsnp'=0,'b'=NA,
'se'=NA,'pval'=NA,'lo_ci'=NA,'up_ci'=NA,'or'=NA,'or_lci95'=NA,
'or_uci95'=NA,'file_id'=file_id,'egger_intercept'=NA,'pleiotropy_pval'=NA,
'Q'=NA,'Q_df'=NA,'Q_pval'=NA,'I2'=NA))
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
cat('clump后SNP不足，已跳过\n')
z <- z+1
next
}
# 计算R2，筛选F值
exp_dat_clump <- nnMR::filter_F(exp_dat_clump)
# 读取结局并提取相关数据
out_dat <- subset(outcome_data,SNP %in% exp_dat_clump[['SNP']])
# harmonise
dat_harmonised <- TwoSampleMR::harmonise_data(exposure_dat = exp_dat_clump,
outcome_dat = out_dat)
# 如果harmonise后SNP少于3个，则跳过
if (nrow(dat_harmonised)<3){
cat('harmonise后SNP不足，已跳过\n')
skip_data <- data.frame(list('exposure'=exposure_name,'outcome'=outcome_name,'method'=NA,'nsnp'=nrow(dat_harmonised),'b'=NA,
'se'=NA,'pval'=NA,'lo_ci'=NA,'up_ci'=NA,'or'=NA,'or_lci95'=NA,
'or_uci95'=NA,'file_id'=file_id,'egger_intercept'=NA,'pleiotropy_pval'=NA,
'Q'=NA,'Q_df'=NA,'Q_pval'=NA,'I2'=NA))
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
z <- z+1
next
}
# MR分析
res <- TwoSampleMR::mr(dat_harmonised,method_list = c('mr_egger_regression','mr_weighted_median','mr_ivw'))
View(res)
# MR分析
res <- TwoSampleMR::mr(dat_harmonised,method_list = c('mr_egger_regression','mr_weighted_median','mr_ivw'))
file_id <- file_list[10]
# file_id <- 'GCST90001500'
exposure_name <- dict_immune[[file_id]]
cat('(',z,'/',zz,') Analysing',' \'',exposure_name,'\'',' to \'',outcome_name,'\'',sep = '')
# 读取暴露并筛选
tryCatch({
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
},error=function(error){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
})
# 读取暴露并筛选
tryCatch({
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
},error=function(error){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
})
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
# 读取暴露并筛选
tryCatch({
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
},error=function(error){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
})
file_id <- file_list[11]
# 读取暴露并筛选
tryCatch({
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
},error=function(error){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
})
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
# 读取暴露并筛选
tryCatch({
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
},error=function(error){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
})
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
# 读取暴露并筛选
if (file.exists(paste0(file_id,'.csv'))){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
}else{
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
}
file_id <- file_list[13]
# 读取暴露并筛选
if (file.exists(paste0(file_id,'.csv'))){
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'.csv')))
}else{
exp_dat <- data.table::fread(file.path(exposure_path,paste0(file_id,'_exposure.csv')))
}
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd('C:/Users/Zz/Desktop/nntest')
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=5e-8,clump_r2=0.001,clump_kb=10000,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd('C:/Users/Zz/Desktop/nntest')
suppressMessages(immnune_auto(exposure_path='D:/immune/exposure',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=5e-8,clump_r2=0.001,clump_kb=10000,bfile_path='D:/clump_pop/EUR'))
data <- new_data[new_data$method=='Inverse variance weighted'&new_data$nsnp>2]
new_data <- data.table::fread('result.csv')
View(new_data)
data <- new_data[new_data$method=='Inverse variance weighted'&new_data$nsnp>2]
View(data)
data2 <- data[order(data$pval)]
View(data2)
for (n in 1:nrow(data2)){
if (n==nrow(data2)){
data2[n,'ajustP'] <- data2[n,'pval']
}else{
data2[n,'ajustP'] <- (data2[n,'pval'])*(nrow(data2)/n)
}
}
for (n in 1:nrow(data2)){
if (n==nrow(data2)){
data2[n,'ajustP'] <- data2[n,'pval']
}else{
ajustP <- (data2[n,'pval'])*(nrow(data2)/n)
if (ajustP>1){
ajustP <- 1
}
data2[n,'ajustP'] <- (data2[n,'pval'])*(nrow(data2)/n)
}
}
ajustP <- (data2[n,'pval'])*(nrow(data2)/n)
View(ajustP)
if (ajustP[1]>1){
ajustP <- 1
}
if (ajustP[[1]>1){
if (ajustP[[1]]>1){
ajustP <- 1
}
View(ajustP)
if (ajustP[[1]]>0.1){
ajustP <- 1
}
data2[n,'ajustP'] <- (data2[n,'pval'])*(nrow(data2)/n)
for (n in 1:nrow(data2)){
if (n==nrow(data2)){
data2[n,'ajustP'] <- data2[n,'pval']
}else{
ajustP <- (data2[n,'pval'])*(nrow(data2)/n)
if (ajustP[[1]]>1){
ajustP <- 1
}
data2[n,'ajustP'] <- ajustP
}
}
output_file_path <- subset('.csv','',output_path)
output_file_path <- gsub('.csv','',output_path)
output_file_path <- paste0(gsub('.csv','',output_path),'_FDR.csv')
data.table::fwrite(data2,output_file_path)
row_data <- data.table::fread(output_path)
data <- row_data[row_data$method=='Inverse variance weighted'&row_data$nsnp>2]
data2 <- data[order(data$pval)]
for (n in 1:nrow(data2)){
if (n==nrow(data2)){
data2[n,'ajustP'] <- data2[n,'pval']
}else{
ajustP <- (data2[n,'pval'])*(nrow(data2)/n)
if (ajustP[[1]]>1){
ajustP <- 1
}
data2[n,'ajustP'] <- ajustP
}
}
output_file_path <- paste0(gsub('.csv','',output_path),'_FDR.csv')
data.table::fwrite(data2,output_file_path)
cat('完成')
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
