data <- merge(reg,presso_dat,by ='exposure')[c(1:3),]
ple <- TwoSampleMR::mr_pleiotropy_test(dat_harmonised)[,-c(1:3,6)]
ple$exposure <- file_id
colnames(ple)[3] <- 'pleiotropy_pval'
ht <- TwoSampleMR::mr_heterogeneity(dat_harmonised)[2,-c(1:3,5)]
ii <- (ht$Q-ht$Q_df)/ht$Q
if (ii<0){
ht$I2 <- 0
}else{
ht$I2 <- (ht$Q-ht$Q_df)/ht$Q
}
mgx <- merge(ple,ht,by='exposure')
new <- merge(data,mgx,by='exposure')
data <- new[,-c(2,3)]
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
if (!file.exists(output_path)){
data.table::fwrite(data,output_path)
}else{
existing_data <- data.table::fread(output_path)
new_data <- rbind(existing_data,data)
data.table::fwrite(new_data,output_path)
}
# 创建文件夹并绘图
if (!dir.exists('plot')){
dir.create('plot')
}
res_single <- TwoSampleMR::mr_singlesnp(dat_harmonised)
res_loo <- TwoSampleMR::mr_leaveoneout(dat_harmonised)
p1 <- TwoSampleMR::mr_scatter_plot(res, dat_harmonised)
ggplot2::ggsave(p1[[1]], file=paste0('./plot/',file_id,"_res.pdf"), width=7, height=7)
#森林图
p2 <- TwoSampleMR::mr_forest_plot(res_single)
##保存图片
ggplot2::ggsave(p2[[1]], file=paste0('./plot/',file_id,"_forest.pdf"), width=7, height=7)
##留一法图
p3 <- TwoSampleMR::mr_leaveoneout_plot(res_loo)
##保存图片
ggplot2::ggsave(p3[[1]], file=paste0('./plot/',file_id,"_loo.pdf"), width=7, height=7)
##漏斗图
res_single <- TwoSampleMR::mr_singlesnp(dat_harmonised)
p4 <- TwoSampleMR::mr_funnel_plot(res_single)
##保存图片
ggplot2::ggsave(p4[[1]], file=paste0('./plot/',file_id,"_single.pdf"), width=7, height=7)
dt <- fread(output_path)
View(dt)
dt2 <- merge(dt,transform_immune,by.x = 'exposure',by.y = 'ID',all.x = T)
View(dt2)
dt <- fread(output_path)
dt2 <- merge(dt,transform_immune[,-3],by.x = 'exposure',by.y = 'ID',all.x = T)
View(dt2)
View(transform_immune)
dt <- fread(output_path)
dt2 <- merge(dt,transform_immune[,-4],by.x = 'exposure',by.y = 'ID',all.x = T)
View(dt2)
col_order <- c("exposure", "TRAIT", "MAPPED_TRAIT", setdiff(names(df), c("exposure", "TRAIT", "MAPPED_TRAIT")))
df <- dt2[, col_order]
colnames(dt2)
col_order <- c("exposure", "TRAIT", "MAPPED_TRAIT", setdiff(names(dt2), c("exposure", "TRAIT", "MAPPED_TRAIT")))
df <- dt2[, col_order]
df <- dt2[, ..col_order]
View(df)
file_list <- file_list[1:200]
immnune_auto(exposure_path='D:/immune/csv',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR')
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
immnune_auto(exposure_path='D:/immune/csv',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR')
document()
document()
setwd("C:/Users/Zz/Desktop/免疫细胞/test")
immnune_auto(exposure_path='D:/immune/csv',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR')
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
suppressMessages(immnune_auto(exposure_path='D:/immune/csv',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
ld_clump
getAnywhere(ld_clump)
getAnywhere(ld_clump_local)
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd("C:/Users/Zz/Desktop/免疫细胞/test")
suppressMessages(immnune_auto(exposure_path='D:/immune/csv',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
document()
document()
document()
document()
suppressMessages(immnune_auto(exposure_path='D:/immune/csv',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
transform_immune_process(dat='result.csv')
document()
transform_immune_process(dat='result.csv')
data("transform_immune")
dat <- data.table::fread(dat)
dat='result.csv'
dat <- data.table::fread(dat)
dt <- merge(dat,transform_immune[,-4],by.x = 'exposure',by.y = 'ID',all.x = T)
View(dt)
col_order <- c("exposure", "TRAIT", "MAPPED_TRAIT", setdiff(names(dt), c("exposure", "TRAIT", "MAPPED_TRAIT")))
df <- dt[, ..col_order]
View(df)
document()
transform_immune_process(dat='result.csv')
transform_immune_process(dat='result.csv')
transform_immune_process(dat='result.csv')
dat='result.csv'
data("transform_immune")
dat <- data.table::fread(dat)
dt <- merge(dat,transform_immune[,-4],by.x = 'exposure',by.y = 'ID',all.x = T)
col_order <- c("exposure", "TRAIT", "MAPPED_TRAIT", setdiff(names(dt), c("exposure", "TRAIT", "MAPPED_TRAIT")))
df <- dt[, ..col_order]
writexl::write_xlsx(df,'result_transformed.xlsx')
document()
transform_immune_process(dat='result.csv')
document()
transform_immune_process(dat='result.csv')
transform_immune_process(dat='result.csv')
setwd("C:/Users/Zz/Desktop/免疫细胞/test")
file_path <- '初筛1e–5_0.1_500.xlsx'
data("transform_immune_process")
data("dict_immune")
data(dict_immune)
# 设置前置数据
data("dict_immune")
data("dict_immune")
library(nnMR)
data("dict_immune")
# 判断文件传入文件类型，选择不同的读取方法
if ('xlsx' %in% file_path){
file_list <- readxl::read_xlsx(file_path)[[1]]
file_list <- unique(file_list)
}else if ('csv' %in% file_path){
file_list <- data.table::fread(file_path)[[1]]
file_list <- unique(file_list)
}
# 判断文件传入文件类型，选择不同的读取方法
if ('xlsx' %in% file_path){
print('1')
file_list <- readxl::read_xlsx(file_path)[[1]]
file_list <- unique(file_list)
}else if ('csv' %in% file_path){
file_list <- data.table::fread(file_path)[[1]]
file_list <- unique(file_list)
}
# 判断文件传入文件类型，选择不同的读取方法
if (grepl('\\xlsx$',file_path)){
file_list <- readxl::read_xlsx(file_path)[[1]]
file_list <- unique(file_list)
}else if ('csv' %in% file_path){
file_list <- data.table::fread(file_path)[[1]]
file_list <- unique(file_list)
}
# 判断文件传入文件类型，选择不同的读取方法
if (grepl('\\.xlsx$',file_path)){
file_list <- readxl::read_xlsx(file_path)[[1]]
file_list <- unique(file_list)
}else if ('csv' %in% file_path){
file_list <- data.table::fread(file_path)[[1]]
file_list <- unique(file_list)
}
# 判断文件传入文件类型，选择不同的读取方法
if (grepl('\\.xlsx$',file_path)){
file_list <- readxl::read_xlsx(file_path)[[1]]
file_list <- unique(file_list)
}else if (grepl('\\.xlsx$',file_path)){
file_list <- data.table::fread(file_path)[[1]]
file_list <- unique(file_list)
}else{
stop('待分析文件需要为xlsx或csv文件')
}
data("dict_immune")
for (file_id in file_list){
exposure_name <- dict_immune[[file_id]]
}
outcome_name <- dict_immune[[file_id]]
outcome_path <- 'D:/immune/已处理的原文件'
# 读取结局
outcome_data <- TwoSampleMR::read_outcome_data(filename = file.path(outcome_path,paste0(file_id,'tsv.gz')),
snps = exp_dat$SNP,snp_col = 'variant_id',
chr_col = 'chromosome',pos_col = 'base_pair_location',
effect_allele_col = 'effect_allele',other_allele_col = 'other_allele',
samplesize_col = 'n',eaf_col = 'effect_allele_frequency',
beta_col = 'beta',se_col = 'standard_error',pval_col = 'p_value')
# 读取结局
outcome_data <- TwoSampleMR::read_outcome_data(filename = file.path(outcome_path,paste0(file_id,'.tsv.gz')),
snps = exp_dat$SNP,snp_col = 'variant_id',
chr_col = 'chromosome',pos_col = 'base_pair_location',
effect_allele_col = 'effect_allele',other_allele_col = 'other_allele',
samplesize_col = 'n',eaf_col = 'effect_allele_frequency',
beta_col = 'beta',se_col = 'standard_error',pval_col = 'p_value')
exposure_data <- TwoSampleMR::read_exposure_data(dat = 'finngen_R9_L12_ATOPIC.gz',type = 'exposure',
snp_col = 'rsids',chr_col = '#chrom',pos_col = 'pos',
effect_allele_col = 'alt',other_allele_col = 'ref',
pval_col = 'pval',beta_col = 'beta',se_col = 'sebeta',
eaf_col = 'af_alt')
exposure_data <- TwoSampleMR::read_exposure_data(filename = 'finngen_R9_L12_ATOPIC.gz',type = 'exposure',
snp_col = 'rsids',chr_col = '#chrom',pos_col = 'pos',
effect_allele_col = 'alt',other_allele_col = 'ref',
pval_col = 'pval',beta_col = 'beta',se_col = 'sebeta',
eaf_col = 'af_alt')
exposure_data <- TwoSampleMR::read_exposure_data(filename = 'finngen_R9_L12_ATOPIC.gz',,
snp_col = 'rsids',chr_col = '#chrom',pos_col = 'pos',
effect_allele_col = 'alt',other_allele_col = 'ref',
pval_col = 'pval',beta_col = 'beta',se_col = 'sebeta',
eaf_col = 'af_alt')
exposure_data <- TwoSampleMR::read_exposure_data(filename = 'finngen_R9_L12_ATOPIC.gz',
snp_col = 'rsids',chr_col = '#chrom',pos_col = 'pos',
effect_allele_col = 'alt',other_allele_col = 'ref',
pval_col = 'pval',beta_col = 'beta',se_col = 'sebeta',
eaf_col = 'af_alt')
exposure_data <- fread('finngen_R9_L12_ATOPIC.gz')
exposure_data$samplesize <- 350062
exposure_data$phenotype <- 'Atopic dermatitis'
exposure_data <- TwoSampleMR::format_data(dat = exposure_data,type = 'exposure',
snp_col = 'rsids',chr_col = '#chrom',pos_col = 'pos',
effect_allele_col = 'alt',other_allele_col = 'ref',
pval_col = 'pval',beta_col = 'beta',se_col = 'sebeta',
eaf_col = 'af_alt',samplesize_col = 'samplesize',phenotype_col = 'phenotype')
exposure_pval <- 5e-8
clump_kb <- 10000
clump_r2 <- 0.001
bfile_path <- 'D:/clump_pop/EUR'
# 读取暴露
exp_dat <- subset(exposure_data,pval.exposure<exposure_pval)
# clump,如果报错则跳过
tryCatch({
exp_dat_clump <- exp_dat %>%
rename(rsid = SNP,
pval = pval.exposure) %>%
nnMR::nn_ld_clump(dat = .,
clump_kb = clump_kb,
clump_r2 = clump_r2,
clump_p = 1,
plink_bin =plinkbinr::get_plink_exe(),
bfile = bfile_path)%>%
rename(SNP = rsid,
pval.exposure = pval)
},error=function(error){
stop('clump出错，请重新调整参数')
})
# 计算R2，筛选F值
exp_dat_clump <- nnMR::filter_F(exp_dat_clump)
# 读取结局
outcome_data <- TwoSampleMR::read_outcome_data(filename = file.path(outcome_path,paste0(file_id,'.tsv.gz')),
snps = exp_dat_clump$SNP,snp_col = 'variant_id',
chr_col = 'chromosome',pos_col = 'base_pair_location',
effect_allele_col = 'effect_allele',other_allele_col = 'other_allele',
samplesize_col = 'n',eaf_col = 'effect_allele_frequency',
beta_col = 'beta',se_col = 'standard_error',pval_col = 'p_value')
View(exp_dat_clump)
fread('GCST90001394.tsv.gz',nrows = 5)
# 读取结局
out <- data.table::fread(file.path(outcome_path,paste0(file_id,'.tsv.gz'))
outcome_data <- TwoSampleMR::read_outcome_data(filename = file.path(outcome_path,paste0(file_id,'.tsv.gz')),
# 读取结局
out <- data.table::fread(file.path(outcome_path,paste0(file_id,'.tsv.gz')))
out <- subset(out,variant_id %in% exp_dat_clump[['SNP']])
out$outcome <- outcome_name
View(out)
outcome_data <- TwoSampleMR::format_data(dat = out,
snp_col = 'variant_id',
chr_col = 'chromosome',pos_col = 'base_pair_location',
effect_allele_col = 'effect_allele',other_allele_col = 'other_allele',
samplesize_col = 'n',eaf_col = 'effect_allele_frequency',
beta_col = 'beta',se_col = 'standard_error',pval_col = 'p_value')
outcome_data <- TwoSampleMR::format_data(dat = out,type = 'outcome',
snp_col = 'variant_id',
chr_col = 'chromosome',pos_col = 'base_pair_location',
effect_allele_col = 'effect_allele',other_allele_col = 'other_allele',
samplesize_col = 'n',eaf_col = 'effect_allele_frequency',
beta_col = 'beta',se_col = 'standard_error',pval_col = 'p_value',phenotype_col = 'outcome')
View(outcome_data)
# harmonise
dat_harmonised <- TwoSampleMR::harmonise_data(exposure_dat = exp_dat_clump,
outcome_dat = outcome_data)
# MR分析
res <- TwoSampleMR::mr(dat_harmonised,method_list = c('mr_egger_regression','mr_weighted_median','mr_ivw'))
reg <- TwoSampleMR::generate_odds_ratios(res)
cat('...P-value:',reg$pval[3])
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
document()
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
warnings()
document()
library(nnMR)
document()
library(nnMR)
document()
document()
document()
library(nnMR)
document()
library(nnMR)
document()
library(nnMR)
setwd("C:/Users/Zz/Desktop/免疫细胞/test")
out_dat <- fread('finngen_R9_L12_ATOPIC.gz')
out_dat$samplesize <- 350062
out_dat$phenotype <- 'Atopic dermatitis'
out_dat <- TwoSampleMR::format_data(dat = out_dat,type = 'outcome',
snp_col = 'rsids',chr_col = '#chrom',pos_col = 'pos',
effect_allele_col = 'alt',other_allele_col = 'ref',
pval_col = 'pval',beta_col = 'beta',se_col = 'sebeta',
eaf_col = 'af_alt',samplesize_col = 'samplesize',phenotype_col = 'phenotype')
suppressMessages(immnune_auto(exposure_path='D:/immune/csv',outcome_data=outcome_data,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
suppressMessages(immnune_auto(exposure_path='D:/immune/csv',outcome_data=out_dat,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd("C:/Users/Zz/Desktop/免疫细胞/test")
suppressMessages(immnune_auto(exposure_path='D:/immune/csv',outcome_data=out_dat,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('C:/Users/Zz/Desktop/nnMR/nnMR')
document()
setwd("C:/Users/Zz/Desktop/免疫细胞/test")
suppressMessages(immnune_auto(exposure_path='D:/immune/csv',outcome_data=out_dat,output_path='result.csv',
multiprocess=FALSE,start_num=NA,end_num=NA,
exposure_pval=1e-5,clump_r2=0.1,clump_kb=500,bfile_path='D:/clump_pop/EUR'))
setwd('D:/immune')
# 处理为暴露
file_list <- list.files('原始文件')
i <- 1
for (file in file_list){
cat(i,'\n')
file_path <- file.path('P_5e-05',file)
file_id <- gsub('.csv','',file)
exp <- data.table::fread(file_path)
exp$exposure <- name[[file_id]]
exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'exposure',
snp_col = 'variant_id',effect_allele_col = 'effect_allele',
other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
se_col = 'standard_error',pval_col = 'p_value ',samplesize_col = 'n',
chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'exposure')
exp_dat <- nnMR::filter_F(exp_dat)
data.table::fwrite(exp_dat,file.path('exposure',paste0(file_id,'_exposure.csv')))
i <- i+1
}
# 处理为暴露
file_list <- list.files('P_5e-05')
i <- 1
for (file in file_list){
cat(i,'\n')
file_path <- file.path('P_5e-05',file)
file_id <- gsub('.csv','',file)
exp <- data.table::fread(file_path)
exp$exposure <- name[[file_id]]
exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'exposure',
snp_col = 'variant_id',effect_allele_col = 'effect_allele',
other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
se_col = 'standard_error',pval_col = 'p_value ',samplesize_col = 'n',
chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'exposure')
exp_dat <- nnMR::filter_F(exp_dat)
data.table::fwrite(exp_dat,file.path('exposure',paste0(file_id,'_exposure.csv')))
i <- i+1
}
data("dict_immune")
library(nnMR)
data("dict_immune")
for (file in file_list){
cat(i,'\n')
file_path <- file.path('P_5e-05',file)
file_id <- gsub('.csv','',file)
exp <- data.table::fread(file_path)
exp$exposure <- dict_immune[[file_id]]
exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'exposure',
snp_col = 'variant_id',effect_allele_col = 'effect_allele',
other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
se_col = 'standard_error',pval_col = 'p_value ',samplesize_col = 'n',
chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'exposure')
exp_dat <- nnMR::filter_F(exp_dat)
data.table::fwrite(exp_dat,file.path('exposure',paste0(file_id,'_exposure.csv')))
i <- i+1
}
exp$exposure <- dict_immune[[file_id]]
View(exp)
source("D:/immune/数据处理.R")
# exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'exposure',
#                                     snp_col = 'variant_id',effect_allele_col = 'effect_allele',
#                                     other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
#                                     se_col = 'standard_error',pval_col = 'p_value ',samplesize_col = 'n',
#                                     chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'exposure')
exp_dat <- nnMR::filter_F(exp_dat)
# exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'exposure',
#                                     snp_col = 'variant_id',effect_allele_col = 'effect_allele',
#                                     other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
#                                     se_col = 'standard_error',pval_col = 'p_value ',samplesize_col = 'n',
#                                     chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'exposure')
exp <- nnMR::filter_F(exp)
View(exp)
i <- 1
for (file in file_list){
cat(i,'\n')
file_path <- file.path('P_5e-05',file)
file_id <- gsub('.csv','',file)
exp <- data.table::fread(file_path)
exp$exposure <- dict_immune[[file_id]]
# exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'exposure',
#                                     snp_col = 'variant_id',effect_allele_col = 'effect_allele',
#                                     other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
#                                     se_col = 'standard_error',pval_col = 'p_value ',samplesize_col = 'n',
#                                     chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'exposure')
exp <- nnMR::filter_F(exp)
data.table::fwrite(exp_dat,file.path('exposure',paste0(file_id,'_exposure.csv')))
i <- i+1
}
i <- 1
for (file in file_list){
cat(i,'\n')
file_path <- file.path('P_5e-05',file)
file_id <- gsub('.csv','',file)
exp <- data.table::fread(file_path)
exp$exposure <- dict_immune[[file_id]]
# exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'exposure',
#                                     snp_col = 'variant_id',effect_allele_col = 'effect_allele',
#                                     other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
#                                     se_col = 'standard_error',pval_col = 'p_value ',samplesize_col = 'n',
#                                     chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'exposure')
exp <- nnMR::filter_F(exp)
data.table::fwrite(exp,file.path('exposure',paste0(file_id,'_exposure.csv')))
i <- i+1
}
a <- fread('outcome/GCST90001391_outcome.tsv.gz',nrow=100)
library(data.table)
a <- fread('outcome/GCST90001391_outcome.tsv.gz',nrow=100)
View(a)
b <- fread('原始文件/GCST90001391_outcome.tsv.gz',nrow=100)
b <- fread('原始文件/GCST90001391.tsv.gz',nrow=100)
View(b)
# 731免疫细胞处理为结局数据
file_list <- list.files('原始文件')
i <- 1
for (file in file_list){
file <- file_list[1]
cat(i,'\n')
file_path <- file.path('原始文件',file)
file_id <- gsub('.tsv.gz','',file)
exp <- data.table::fread(file_path,fill = TRUE,select = c(13:25))
exp$outcome <- dict_immune[[file_id]]
exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'outcome',
snp_col = 'variant_id',effect_allele_col = 'effect_allele',
other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
se_col = 'standard_error',pval_col = 'p_value',samplesize_col = 'n',
chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'outcome')
# exp_dat <- nnMR::filter_F(exp_dat)
data.table::fwrite(exp_dat,file.path('outcome',paste0(file_id,'_outcome.tsv.gz')))
i <- i+1
}
warnings()
# exp_dat <- nnMR::filter_F(exp_dat)
data.table::fwrite(exp_dat,file.path('outcome',paste0(file_id,'_outcome.tsv.gz')))
# 731免疫细胞处理为结局数据
file_list <- list.files('原始文件')
i <- 1
for (file in file_list){
cat(i,'\n')
file_path <- file.path('原始文件',file)
file_id <- gsub('.tsv.gz','',file)
exp <- data.table::fread(file_path,fill = TRUE,select = c(13:25))
exp$outcome <- dict_immune[[file_id]]
exp_dat <- TwoSampleMR::format_data(dat = exp,type = 'outcome',
snp_col = 'variant_id',effect_allele_col = 'effect_allele',
other_allele_col = 'other_allele',eaf_col = 'effect_allele_frequency',beta_col = 'beta',
se_col = 'standard_error',pval_col = 'p_value',samplesize_col = 'n',
chr_col = 'chromosome',pos_col = 'base_pair_location',phenotype_col = 'outcome')
# exp_dat <- nnMR::filter_F(exp_dat)
data.table::fwrite(exp_dat,file.path('outcome',paste0(file_id,'_outcome.tsv.gz')))
i <- i+1
}
setwd('C:/Users/Zz/Desktop/reflux/remake')
library(data.table)
# library(nnMR)
file_list <- unique(fread('486(5e-06)-FinngenReflux.csv')[[1]])
out_dat <- fread('finngen_R9_K11_REFLUX.gz')
out_dat <- TwoSampleMR::format_data(dat = out_dat,
type = 'exposure',
chr_col = '#chrom',pos_col = 'pos',effect_allele_col = 'alt',
other_allele_col = 'ref',snp_col = 'rsids',pval_col = 'pval',
beta_col = 'beta',se_col = 'sebeta',eaf_col = 'af_alt',phenotype_col = 'phenotype')
out_dat$samplesize.outcome <- 346571
out_dat <- TwoSampleMR::format_data(dat = out_dat,
type = 'exposure',
chr_col = '#chrom',pos_col = 'pos',effect_allele_col = 'alt',
other_allele_col = 'ref',snp_col = 'rsids',pval_col = 'pval',
beta_col = 'beta',se_col = 'sebeta',eaf_col = 'af_alt',phenotype_col = 'phenotype')
